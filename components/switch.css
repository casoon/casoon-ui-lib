/*
 * Switch Module
 *
 * Toggle-Schalter für Boolean-Werte.
 */

/**
 * Switch-Komponente
 * 
 * Umschalter für binäre Ja/Nein- oder Ein/Aus-Optionen.
 * Switches bieten eine intuitive Alternative zu Checkboxen für Ein/Aus-Zustände.
 * 
 * @layer components.switch
 * 
 * Grundlegende Verwendung:
 * <label class="switch">
 *   <input type="checkbox">
 *   <span class="toggle"></span>
 *   <span class="label">Benachrichtigungen</span>
 * </label>
 * 
 * Zustände:
 * <label class="switch">
 *   <input type="checkbox" checked>
 *   <span class="toggle"></span>
 *   <span class="label">Aktiviert</span>
 * </label>
 * 
 * <label class="switch">
 *   <input type="checkbox" disabled>
 *   <span class="toggle"></span>
 *   <span class="label">Deaktiviert</span>
 * </label>
 * 
 * Größenvarianten:
 * <label class="switch sm">
 *   <input type="checkbox">
 *   <span class="toggle"></span>
 *   <span class="label">Klein</span>
 * </label>
 * 
 * <label class="switch">
 *   <input type="checkbox">
 *   <span class="toggle"></span>
 *   <span class="label">Mittel (Standard)</span>
 * </label>
 * 
 * <label class="switch lg">
 *   <input type="checkbox">
 *   <span class="toggle"></span>
 *   <span class="label">Groß</span>
 * </label>
 * 
 * Farbvarianten:
 * <label class="switch primary">...</label>
 * <label class="switch success">...</label>
 * <label class="switch warning">...</label>
 * <label class="switch danger">...</label>
 */


  .switch {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    cursor: pointer;
    position: relative;
    
    input[type="checkbox"] {
      position: absolute;
      opacity: 0;
      width: 0;
      height: 0;
      
      &:focus-visible ~ .toggle {
        outline: 2px solid var(--color-primary);
        outline-offset: 2px;
      }
      
      &:checked ~ .toggle {
        background-color: var(--color-primary);
        
        &::before {
          transform: translateX(calc(var(--switch-width) - var(--switch-height)));
        }
      }
      
      &:disabled ~ .toggle {
        background-color: var(--color-gray-200);
        cursor: not-allowed;
        opacity: 0.7;
        
        &::before {
          background-color: var(--color-gray-400);
        }
      }
      
      &:disabled ~ .label {
        color: var(--color-gray-400);
        cursor: not-allowed;
      }
    }
    
    .toggle {
      display: inline-block;
      width: var(--switch-width, 2.5rem);
      height: var(--switch-height, 1.25rem);
      background-color: var(--color-gray-300);
      border-radius: var(--radius-full);
      position: relative;
      transition: background-color var(--transition-fast);
      
      &::before {
        content: '';
        position: absolute;
        top: calc(var(--switch-height) * 0.1);
        left: calc(var(--switch-height) * 0.1);
        width: calc(var(--switch-height) * 0.8);
        height: calc(var(--switch-height) * 0.8);
        background-color: var(--color-white);
        border-radius: 9999px;
        transition: transform var(--transition-fast);
        box-shadow: 0 1px 2px rgb(0 0 0 / 10%);
      }
    }
    
    /* Größenvarianten */
    &.sm {
      --switch-width: 2rem;
      --switch-height: 1rem;

      font-size: var(--font-size-sm);
    }
    
    &.lg {
      --switch-width: 3.5rem;
      --switch-height: 1.75rem;

      font-size: var(--font-size-lg);
    }
    
    /* Farbvarianten */
    &.primary input[type="checkbox"]:checked ~ .toggle {
      background-color: var(--color-primary);
    }
    
    &.success input[type="checkbox"]:checked ~ .toggle {
      background-color: var(--color-success);
    }
    
    &.warning input[type="checkbox"]:checked ~ .toggle {
      background-color: var(--color-warning);
    }
    
    &.danger input[type="checkbox"]:checked ~ .toggle {
      background-color: var(--color-error);
    }
    
    /* Alternative Implementierung für JS-Steuerung */
    &.checked {
      .toggle {
        background-color: var(--color-primary);
        
        &::before {
          transform: translateX(1.25rem);
        }
      }
    }
  }



  
  

  