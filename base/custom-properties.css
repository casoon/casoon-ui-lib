/**
 * Benutzerdefinierte CSS-Eigenschaften mit @property
 * 
 * Diese Datei definiert registrierte benutzerdefinierte Eigenschaften mit @property,
 * die Typen, Anfangswerte und Vererbungsverhalten festlegen können.
 * Dies ermöglicht erweiterte Funktionen wie Animation zwischen Eigenschaften 
 * mit unterschiedlichen Einheiten, Interpolation von Farben und mehr.
 */


  /* 
   * Farbübergänge animierbar machen 
   * Diese Eigenschaften werden für animierte Farbübergänge verwendet
   * und sollten mit den Farb-Tokens aus tokens.css abgestimmt sein
   */
  @property --color-primary {
    syntax: '<color>';
    inherits: false;
    initial-value: #3b82f6;
  }

  @property --color-accent {
    syntax: '<color>';
    inherits: false;
    initial-value: #8b5cf6;
  }

  @property --color-text {
    syntax: '<color>';
    inherits: true;
    initial-value: #1f2937;
  }

  @property --color-background {
    syntax: '<color>';
    inherits: false;
    initial-value: #f9fafb;
  }
  
  @property --color-surface {
    syntax: '<color>';
    inherits: false;
    initial-value: #fff;
  }

  /* 
   * Layouts und Abstände animierbar machen 
   * Diese Eigenschaften werden für animierte Layout-Änderungen verwendet
   * und sollten mit den Spacing-Tokens aus tokens.css abgestimmt sein
   */
  @property --space-unit {
    syntax: '<length>';
    inherits: true;
    initial-value: 1rem;
  }

  @property --border-width {
    syntax: '<length>';
    inherits: false;
    initial-value: 1px;
  }

  @property --radius {
    syntax: '<length-percentage>';
    inherits: false;
    initial-value: 0.5rem;
  }

  /* 
   * Animierbare Transformations-Eigenschaften 
   * Diese Eigenschaften werden für animierte Transformationen verwendet
   */
  @property --rotation-angle {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0deg;
  }

  @property --scale-factor {
    syntax: '<number>';
    inherits: false;
    initial-value: 1;
  }

  @property --translate-x {
    syntax: '<length-percentage>';
    inherits: false;
    initial-value: 0;
  }

  @property --translate-y {
    syntax: '<length-percentage>';
    inherits: false;
    initial-value: 0;
  }

  /* 
   * Animierbare Opazität und Sichtbarkeit 
   */
  @property --opacity {
    syntax: '<number>';
    inherits: false;
    initial-value: 1;
  }

  @property --blur-radius {
    syntax: '<length>';
    inherits: false;
    initial-value: 0;
  }

  /* 
   * Animierbare Gradient-Parameter 
   * Für fließende Übergänge zwischen Gradienten
   */
  @property --gradient-angle {
    syntax: '<angle>';
    inherits: false;
    initial-value: 90deg;
  }

  @property --gradient-position {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 50%;
  }

  @property --gradient-stop-1 {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 0%;
  }

  @property --gradient-stop-2 {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 100%;
  }

  /* 
   * Animierbare Schatten-Eigenschaften 
   */
  @property --shadow-x {
    syntax: '<length>';
    inherits: false;
    initial-value: 0;
  }

  @property --shadow-y {
    syntax: '<length>';
    inherits: false;
    initial-value: 4px;
  }

  @property --shadow-blur {
    syntax: '<length>';
    inherits: false;
    initial-value: 6px;
  }

  @property --shadow-spread {
    syntax: '<length>';
    inherits: false;
    initial-value: 0;
  }

  @property --shadow-color {
    syntax: '<color>';
    inherits: false;
    initial-value: rgb(0 0 0 / 10%);
  }


  /* Beispiele für die Verwendung der @property Definitionen */
  .animated-card {
    background-color: var(--color-primary);
    border-radius: var(--radius);
    transform: 
      rotate(var(--rotation-angle)) 
      scale(var(--scale-factor))
      translate(var(--translate-x), var(--translate-y));
    opacity: var(--opacity);
    box-shadow: 
      var(--shadow-x) var(--shadow-y) 
      var(--shadow-blur) var(--shadow-spread) 
      var(--shadow-color);
    transition: 
      --color-primary 0.3s ease, 
      --radius 0.3s ease, 
      --rotation-angle 0.5s ease, 
      --scale-factor 0.5s ease, 
      --translate-y 0.5s ease,
      --opacity 0.3s ease,
      --shadow-y 0.5s ease,
      --shadow-blur 0.5s ease;
  }

  .animated-card:hover {
    --color-primary: var(--color-primary-dark, #4f46e5);
    --radius: var(--border-radius-lg, 1rem);
    --rotation-angle: 5deg;
    --scale-factor: 1.05;
    --translate-y: -8px;
    --opacity: 0.9;
    --shadow-y: 8px;
    --shadow-blur: 12px;
  }

  .animated-gradient {
    background: linear-gradient(
      var(--gradient-angle), 
      var(--color-primary) var(--gradient-stop-1), 
      var(--color-accent) var(--gradient-stop-2)
    );
    transition: 
      --gradient-angle 1s ease, 
      --color-primary 0.5s ease, 
      --color-accent 0.5s ease,
      --gradient-stop-1 0.8s ease,
      --gradient-stop-2 0.8s ease;
  }

  .animated-gradient:hover {
    --gradient-angle: 135deg;
    --color-primary: var(--color-primary-light, #4f46e5);
    --color-accent: var(--color-accent-light, #ec4899);
    --gradient-stop-1: 30%;
    --gradient-stop-2: 70%;
  } 

