/**
 * Interaktionseffekte
 * 
 * Diese Datei enthält verschiedene CSS-Effekte für Benutzerinteraktionen.
 * Die Effekte sind performant optimiert und berücksichtigen reduzierte Bewegung.
 * 
 * Verwendung:
 * 
 * 1. Drag & Drop:
 * <div class="draggable">Ziehbares Element</div>
 * <div class="drop-target">Ablageziel</div>
 * 
 * 2. Swipe-Gesten:
 * <div class="swipe-container">
 *   <div class="swipe-content">Swipe-bare Inhalte</div>
 * </div>
 * 
 * 3. Touch-Feedback:
 * <button class="touch-feedback">Touch-Button</button>
 * 
 * 4. Fokus-Ringe:
 * <button class="focus-ring">Fokusierbarer Button</button>
 * 
 * 5. Deaktivierte Elemente:
 * <button class="disabled" disabled>Deaktivierter Button</button>
 * 
 * 6. Ladezustände:
 * <div class="loading">Ladeanimation</div>
 * 
 * Technische Details:
 * - Verwendet CSS-Variablen für Farben und Größen
 * - Optimiert mit will-change und transform
 * - Responsive Anpassungen für mobile Geräte
 * - Reduzierte Bewegung wird berücksichtigt
 * 
 * Performance-Hinweise:
 * - Interaktionen sind hardware-beschleunigt
 * - Touch-Feedback wird auf mobilen Geräten optimiert
 * - Reduzierte Bewegung wird automatisch berücksichtigt
 */

/* Drag & Drop */
.draggable {
    cursor: grab;
    user-select: none;
    will-change: transform;
}

.draggable:active {
    cursor: grabbing;
}

.drop-target {
    transition: background-color 0.2s ease;
    will-change: background-color;
}

.drop-target.drag-over {
    background-color: var(--color-primary-light);
}

/* Swipe-Gesten */
.swipe-container {
    overflow: hidden;
    position: relative;
    will-change: transform;
}

.swipe-content {
    touch-action: pan-x pan-y;
    will-change: transform;
}

/* Touch-Feedback */
.touch-feedback {
    position: relative;
    overflow: hidden;
    will-change: transform;
}

.touch-feedback::after {
    content: '';
    position: absolute;
    inset-block-start: var(--interaction-tooltip-top);
    inset-inline-start: var(--interaction-tooltip-left);
    inline-size: 0;
    block-size: 0;
    background: rgb(255 255 255 / 20%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: inline-size 0.3s ease, block-size 0.3s ease;
    will-change: inline-size, block-size;
}

.touch-feedback:active::after {
    inline-size: 200%;
    block-size: 200%;
}

/* Fokus-Ringe */
.focus-ring {
    outline: none;
    transition: box-shadow 0.2s ease;
    will-change: box-shadow;
}

.focus-ring:focus-visible {
    box-shadow: 0 0 0 2px var(--color-primary);
}

/* Deaktivierte Elemente */
.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
}

/* Ladezustände */
.loading {
    position: relative;
    overflow: hidden;
}

.loading::after {
    content: '';
    position: absolute;
    inset-block-start: var(--interaction-tooltip-top-start);
    inset-inline-start: var(--interaction-tooltip-left-start);
    inline-size: 100%;
    block-size: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgb(255 255 255 / 20%),
        transparent
    );
    animation: loading 1.5s infinite;
    will-change: transform;
}

@keyframes loading {
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(100%);
    }
}

/* Responsive Anpassungen */
@media (max-width: var(--breakpoint-sm)) {
    .touch-feedback::after {
        inline-size: 150%;
        block-size: 150%;
    }
    
    .focus-ring:focus-visible {
        box-shadow: 0 0 0 1px var(--color-primary);
    }
}

/* Reduzierte Bewegung */
@media (prefers-reduced-motion: reduce) {
    .touch-feedback::after,
    .loading::after {
        animation: none;
    }
    
    .focus-ring {
        transition: none;
    }
}

@layer components {
    /* Hover Effects */
    .hover-scale {
        transition: var(--transition-transform);
    }

    .hover-scale:hover {
        transform: scale(1.05);
    }

    .hover-rotate {
        transition: var(--transition-transform);
    }

    .hover-rotate:hover {
        transform: rotate(5deg);
    }

    .hover-shadow {
        transition: var(--transition-shadow);
    }

    .hover-shadow:hover {
        box-shadow: var(--shadow-md);
    }

    /* Text Masking Effect */
    .text-mask {
        background: linear-gradient(to right, var(--text-mask-color-primary, white) 50%, var(--text-mask-color-secondary, black) 50%);
        background-size: 200% 100%;
        background-position: right;
        color: transparent;
        background-clip: text;
        transition: background-position var(--transition-normal, 0.5s ease);
        will-change: background-position;
    }

    .text-mask:hover {
        background-position: left;
    }

    /* Focus Effects */
    .focus-ring {
        outline: var(--display-none);
    }

    .focus-ring:focus-visible {
        outline: var(--spacing-2) solid var(--theme-primary-500);
        outline-offset: var(--spacing-2);
    }

    /* Active Effects */
    .active-scale:active {
        transform: scale(0.95);
    }

    .active-rotate:active {
        transform: rotate(-5deg);
    }

    /* Reduced Motion */
    @media (prefers-reduced-motion: reduce) {
        .hover-scale,
        .hover-rotate,
        .hover-shadow,
        .active-scale,
        .active-rotate,
        .text-mask {
            transition: var(--transition-none);
        }
    }
} 