/**
 * Animations- und √úbergangssystem
 * 
 * Diese Datei implementiert ein umfassendes System f√ºr CSS-Animationen, Transitionen
 * und Bewegungseffekte. Sie kombiniert klassische CSS-Animationen mit modernen
 * APIs wie View Transitions und Scroll-Driven Animations.
 * 
 * Hauptfunktionalit√§ten:
 * 
 * 1. Grundlegende Animationen:
 *    - Einblenden/Ausblenden (fade-in, fade-out)
 *    - Skalieren (scale-in, scale-out)
 *    - Bewegen (slide-in, slide-out)
 *    - Rotation (rotate-90, rotate-180, rotate-360)
 * 
 * 2. Spezialeffekte:
 *    - Springen (bounce)
 *    - Pulsieren (pulse)
 *    - Sch√ºtteln (shake)
 *    - Schwingen (swing)
 * 
 * 3. Anpassungsoptionen:
 *    - Geschwindigkeit (duration-fast, duration-slow)
 *    - Verz√∂gerung (delay-100, delay-500)
 *    - Wiederholung (iteration-once, iteration-infinite)
 *    - Timing-Funktionen (ease-in, ease-out, ease-bounce)
 * 
 * 4. Moderne Animationstechniken:
 *    - View Transitions f√ºr Seiten√ºberg√§nge
 *    - Scroll-getriebene Animationen
 *    - Parallax-Effekte und Tiefenwahrnehmung
 *    - Fortschrittsbalken und Scroll-Feedback
 * 
 * 5. Erweiterte Animationstechniken:
 *    - Gestaffelte Animationen (stagger-children)
 *    - Scroll-basierte Animationen
 *    - Parallax-Effekte
 *    - View Transitions f√ºr Seiten√ºberg√§nge
 * 
 * 6. Scroll-Driven Animations (rein mit CSS):
 *    - Scroll-getriebene Einblendeffekte (scroll-card, scroll-fade-in)
 *    - Bewegungseffekte beim Scrollen (scroll-slide-up, scroll-slide-in-left/right)
 *    - Parallax-Scrolling-Effekte (parallax-scroll)
 *    - Scroll-basierte Fortschrittsanzeigen (progress-timeline)
 * 
 * Beispiel f√ºr Scroll-Driven Animations:
 * 
 *   <section>
 *     <div class="scroll-card">‚ú® Sleek scroll-triggered motion</div>
 *     <div class="scroll-card">üî• No JavaScript‚Äîjust pure CSS</div>
 *     <div class="scroll-card">üí° Great for portfolios & case studies</div>
 *   </section>
 * 
 * Technische Details:
 * - Verwendet CSS-Variablen f√ºr konsistente Animation-Parameter
 * - Hardware-beschleunigte Animationen durch transform und opacity
 * - Responsive Anpassungen f√ºr verschiedene Ger√§te
 * - Automatische Reduzierung f√ºr 'prefers-reduced-motion'
 * - Fallbacks f√ºr Browser ohne Unterst√ºtzung moderner APIs
 * 
 * @performance Animationen sind f√ºr beste Performance optimiert
 * @a11y Ber√ºcksichtigt Barrierefreiheit durch reduced-motion Support
 * @responsive Anpassung der Animationen auf verschiedenen Bildschirmgr√∂√üen
 * @fallback Enth√§lt Fallbacks f√ºr Browser ohne Unterst√ºtzung moderner Funktionen
 */

@layer animations {
    /* Bestehende Animationsdefinitionen */
    
    /**
     * Animationen und √úberg√§nge
     * 
     * Diese Datei enth√§lt verschiedene CSS-Animationen und √úberg√§nge.
     * Die Animationen sind performant optimiert und ber√ºcksichtigen reduzierte Bewegung.
     * 
     * Verwendung:
     * 
     * 1. Einblend-Animationen:
     * <div class="fade-in">Einblenden</div>
     * <div class="scale-in">Skalieren</div>
     * <div class="slide-in">Hineinschieben</div>
     * 
     * 2. Ausblend-Animationen:
     * <div class="fade-out">Ausblenden</div>
     * <div class="scale-out">Verkleinern</div>
     * <div class="slide-out">Hinausschieben</div>
     * 
     * 3. Spezial-Effekte:
     * <div class="bounce">Springen</div>
     * <div class="pulse">Pulsieren</div>
     * <div class="shake">Sch√ºtteln</div>
     * <div class="swing">Schwingen</div>
     * 
     * 4. Zeitsteuerung:
     * <div class="animation-duration-fast">Schnelle Animation</div>
     * <div class="animation-delay-500">Verz√∂gerte Animation</div>
     * <div class="animation-iteration-infinite">Endlose Animation</div>
     * 
     * 5. View Transitions und Seiten√ºberg√§nge:
     * <header class="transition-header">Kopfzeile mit View Transition</header>
     * <main class="transition-content">Inhalt mit View Transition</main>
     * 
     * 6. Scroll-basierte Animationen:
     * <div class="scroll-reveal">Bei Sichtbarkeit einblenden</div>
     * <div class="parallax-bg">Parallax-Hintergrund</div>
     * <div class="progress-bar">Fortschrittsbalken</div>
     * 
     * Technische Details:
     * - Verwendet CSS-Variablen f√ºr Timing und Dauer
     * - Optimiert mit will-change und transform
     * - Responsive Anpassungen f√ºr mobile Ger√§te
     * - Reduzierte Bewegung wird ber√ºcksichtigt
     * - Fallbacks f√ºr Browser ohne moderne APIs
     * 
     * Performance-Hinweise:
     * - Animationen sind hardware-beschleunigt
     * - Komplexe Animationen werden auf mobilen Ger√§ten reduziert
     * - Reduzierte Bewegung wird automatisch ber√ºcksichtigt
     */
    :root {
        /* Durations */
        --animation-duration-fastest: 100ms;
        --animation-duration-fast: 150ms;
        --animation-duration-normal: 300ms;
        --animation-duration-slow: 500ms;
        --animation-duration-slower: 750ms;
        --animation-duration-slowest: 1000ms;

        /* Timing Functions */
        --ease-linear: linear;
        --ease-in: cubic-bezier(0.4, 0, 1, 1);
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
        --ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
        --ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
        --ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
        --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
        --ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);
        --ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);
        --ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);
        --ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);
        --ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);
        --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
        --ease-spring: cubic-bezier(0.68, -0.6, 0.32, 1.6);
        --ease-elastic: cubic-bezier(0.5, 0.75, 0.75, 1.25);
        
        /* Animation Distances */
        --move-xs: 4px;
        --move-sm: 8px;
        --move-md: 16px;
        --move-lg: 24px;
        --move-xl: 36px;
        
        /* Animation Scales */
        --scale-xs: 0.98;
        --scale-sm: 0.95;
        --scale-md: 0.9;
        --scale-lg: 1.05;
        --scale-xl: 1.1;
        
        /* Animation Rotations */
        --rotate-xs: 1deg;
        --rotate-sm: 3deg;
        --rotate-md: 5deg;
        --rotate-lg: 10deg;
        --rotate-xl: 20deg;
        
        /* Animation Delays */
        --delay-xs: 50ms;
        --delay-sm: 100ms;
        --delay-md: 200ms;
        --delay-lg: 300ms;
        --delay-xl: 500ms;
        
        /* Animation Iterations */
        --iteration-once: 1;
        --iteration-twice: 2;
        --iteration-thrice: 3;
        --iteration-infinite: infinite;
        
        /* Reduced Motion Settings */
        --reduced-motion-duration: 0.01ms;
        --reduced-motion-opacity-only: true;
    }

    /* Base Animation Classes */
    .animate {
        animation-duration: var(--animation-duration-normal);
        animation-fill-mode: both;
        animation-timing-function: var(--ease-in-out-cubic);
    }

    /* Duration Utilities */
    .duration-fastest { animation-duration: var(--animation-duration-fastest); }
    .duration-fast { animation-duration: var(--animation-duration-fast); }
    .duration-normal { animation-duration: var(--animation-duration-normal); }
    .duration-slow { animation-duration: var(--animation-duration-slow); }
    .duration-slower { animation-duration: var(--animation-duration-slower); }
    .duration-slowest { animation-duration: var(--animation-duration-slowest); }

    /* Timing Function Utilities */
    .ease-linear { animation-timing-function: var(--ease-linear); }
    .ease-in { animation-timing-function: var(--ease-in); }
    .ease-out { animation-timing-function: var(--ease-out); }
    .ease-in-out { animation-timing-function: var(--ease-in-out); }
    .ease-in-quad { animation-timing-function: var(--ease-in-quad); }
    .ease-in-cubic { animation-timing-function: var(--ease-in-cubic); }
    .ease-in-quart { animation-timing-function: var(--ease-in-quart); }
    .ease-out-quad { animation-timing-function: var(--ease-out-quad); }
    .ease-out-cubic { animation-timing-function: var(--ease-out-cubic); }
    .ease-out-quart { animation-timing-function: var(--ease-out-quart); }
    .ease-in-out-quad { animation-timing-function: var(--ease-in-out-quad); }
    .ease-in-out-cubic { animation-timing-function: var(--ease-in-out-cubic); }
    .ease-in-out-quart { animation-timing-function: var(--ease-in-out-quart); }
    .ease-bounce { animation-timing-function: var(--ease-bounce); }
    .ease-spring { animation-timing-function: var(--ease-spring); }
    .ease-elastic { animation-timing-function: var(--ease-elastic); }

    /* Animation Iteration Utilities */
    .iteration-once { animation-iteration-count: var(--iteration-once); }
    .iteration-twice { animation-iteration-count: var(--iteration-twice); }
    .iteration-thrice { animation-iteration-count: var(--iteration-thrice); }
    .iteration-infinite { animation-iteration-count: var(--iteration-infinite); }
    .infinite { animation-iteration-count: infinite; }
    .repeat-1 { animation-iteration-count: 1; }
    .repeat-2 { animation-iteration-count: 2; }
    .repeat-3 { animation-iteration-count: 3; }

    /* Animation Direction Utilities */
    .direction-normal { animation-direction: normal; }
    .direction-reverse { animation-direction: reverse; }
    .direction-alternate { animation-direction: alternate; }
    .direction-alternate-reverse { animation-direction: alternate-reverse; }

    /* Animation Fill Mode Utilities */
    .fill-none { animation-fill-mode: none; }
    .fill-forwards { animation-fill-mode: forwards; }
    .fill-backwards { animation-fill-mode: backwards; }
    .fill-both { animation-fill-mode: both; }

    /* Transition Utilities */
    .transition-all { 
        transition-property: all;
        transition-duration: var(--animation-duration-normal);
        transition-timing-function: var(--ease-in-out-cubic);
    }
    
    .transition-colors { 
        transition-property: color, background-color, border-color, fill, stroke;
        transition-duration: var(--animation-duration-normal);
        transition-timing-function: var(--ease-in-out-cubic);
    }
    
    .transition-opacity { 
        transition-property: opacity;
        transition-duration: var(--animation-duration-normal);
        transition-timing-function: var(--ease-in-out-cubic);
    }
    
    .transition-transform { 
        transition-property: transform;
        transition-duration: var(--animation-duration-normal);
        transition-timing-function: var(--ease-in-out-cubic);
    }
    
    .transition-shadow { 
        transition-property: box-shadow;
        transition-duration: var(--animation-duration-normal);
        transition-timing-function: var(--ease-in-out-cubic);
    }
    
    /* Transition Duration Utilities */
    .transition-duration-fastest { transition-duration: var(--animation-duration-fastest); }
    .transition-duration-fast { transition-duration: var(--animation-duration-fast); }
    .transition-duration-normal { transition-duration: var(--animation-duration-normal); }
    .transition-duration-slow { transition-duration: var(--animation-duration-slow); }
    .transition-duration-slower { transition-duration: var(--animation-duration-slower); }
    .transition-duration-slowest { transition-duration: var(--animation-duration-slowest); }
    
    /* Transition Timing Function Utilities */
    .transition-timing-linear { transition-timing-function: var(--ease-linear); }
    .transition-timing-ease-in { transition-timing-function: var(--ease-in); }
    .transition-timing-ease-out { transition-timing-function: var(--ease-out); }
    .transition-timing-bounce { transition-timing-function: var(--ease-bounce); }
    .transition-timing-spring { transition-timing-function: var(--ease-spring); }
    .transition-timing-elastic { transition-timing-function: var(--ease-elastic); }

    /* Transition Delay Utilities */
    .transition-delay-xs { transition-delay: var(--delay-xs); }
    .transition-delay-sm { transition-delay: var(--delay-sm); }
    .transition-delay-md { transition-delay: var(--delay-md); }
    .transition-delay-lg { transition-delay: var(--delay-lg); }
    .transition-delay-xl { transition-delay: var(--delay-xl); }

    /* View Transitions f√ºr Seiten√ºberg√§nge */
    .view-transition {
        view-transition-name: var(--transition-name, "main");
    }

    /* View-Transition Klassen f√ºr verschiedene Seitenelemente */
    .transition-header {
        view-transition-name: header;
    }

    .transition-hero {
        view-transition-name: hero;
    }

    .transition-content {
        view-transition-name: content;
    }

    .transition-footer {
        view-transition-name: footer;
    }

    /* Keyframes Definitionen */
    @keyframes fade-in {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes fade-out {
        from { opacity: 1; }
        to { opacity: 0; }
    }

    @keyframes fade-in-up {
        from {
            opacity: 0;
            transform: translateY(var(--move-md));
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fade-in-down {
        from {
            opacity: 0;
            transform: translateY(calc(-1 * var(--move-md)));
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fade-in-left {
        from {
            opacity: 0;
            transform: translateX(var(--move-md));
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @keyframes fade-in-right {
        from {
            opacity: 0;
            transform: translateX(calc(-1 * var(--move-md)));
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @keyframes scale-in {
        from {
            opacity: 0;
            transform: scale(var(--scale-md));
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @keyframes scale-out {
        from {
            opacity: 1;
            transform: scale(1);
        }

        to {
            opacity: 0;
            transform: scale(var(--scale-md));
        }
    }

    @keyframes scale-up {
        from { transform: scale(1); }
        to { transform: scale(var(--scale-lg)); }
    }

    @keyframes scale-down {
        from { transform: scale(1); }
        to { transform: scale(var(--scale-sm)); }
    }

    @keyframes rotate-90 {
        from { transform: rotate(0deg); }
        to { transform: rotate(90deg); }
    }

    @keyframes rotate-180 {
        from { transform: rotate(0deg); }
        to { transform: rotate(180deg); }
    }

    @keyframes rotate-360 {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    @keyframes slide-in-up {
        from { transform: translateY(var(--move-md)); }
        to { transform: translateY(0); }
    }

    @keyframes slide-in-down {
        from { transform: translateY(calc(-1 * var(--move-md))); }
        to { transform: translateY(0); }
    }

    @keyframes slide-in-left {
        from { transform: translateX(var(--move-md)); }
        to { transform: translateX(0); }
    }

    @keyframes slide-in-right {
        from { transform: translateX(calc(-1 * var(--move-md))); }
        to { transform: translateX(0); }
    }

    @keyframes slide-from-right {
        from { transform: translateX(100%); }
        to { transform: translateX(0); }
    }

    @keyframes slide-from-left {
        from { transform: translateX(-100%); }
        to { transform: translateX(0); }
    }

    @keyframes grow {
        from { transform: scale(0.9); opacity: 0; }
        to { transform: scale(1); opacity: 1; }
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(calc(-1 * var(--move-lg))); }
        60% { transform: translateY(calc(-1 * var(--move-sm))); }
    }

    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(var(--scale-lg)); }
        100% { transform: scale(1); }
    }

    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        10%, 30%, 50%, 70%, 90% { transform: translateX(calc(-1 * var(--move-xs))); }
        20%, 40%, 60%, 80% { transform: translateX(var(--move-xs)); }
    }

    @keyframes swing {
        20% { transform: rotate(var(--rotate-md)); }
        40% { transform: rotate(calc(-1 * var(--rotate-sm))); }
        60% { transform: rotate(calc(var(--rotate-sm) / 2)); }
        80% { transform: rotate(calc(-1 * var(--rotate-sm) / 2)); }
        100% { transform: rotate(0deg); }
    }

    @keyframes reveal {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes progress {
        from { width: 0%; }
        to { width: 100%; }
    }

    @keyframes parallax {
        from { transform: translateY(0); }
        to { transform: translateY(-20%); }
    }

    /* Animation Classes */
    .fade-in { animation-name: fade-in; }
    .fade-out { animation-name: fade-out; }
    .fade-in-up { animation-name: fade-in-up; }
    .fade-in-down { animation-name: fade-in-down; }
    .fade-in-left { animation-name: fade-in-left; }
    .fade-in-right { animation-name: fade-in-right; }

    .scale-in { animation-name: scale-in; }
    .scale-out { animation-name: scale-out; }
    .scale-up { animation-name: scale-up; }
    .scale-down { animation-name: scale-down; }

    .rotate-90 { animation-name: rotate-90; }
    .rotate-180 { animation-name: rotate-180; }
    .rotate-360 { animation-name: rotate-360; }

    .slide-in-up { animation-name: slide-in-up; }
    .slide-in-down { animation-name: slide-in-down; }
    .slide-in-left { animation-name: slide-in-left; }
    .slide-in-right { animation-name: slide-in-right; }

    .bounce { animation-name: bounce; }
    .pulse { animation-name: pulse; }
    .shake { animation-name: shake; }
    .swing { animation-name: swing; }

    /* Animation Delay Utilities */
    .delay-100 { animation-delay: 100ms; }
    .delay-200 { animation-delay: 200ms; }
    .delay-300 { animation-delay: 300ms; }
    .delay-400 { animation-delay: 400ms; }
    .delay-500 { animation-delay: 500ms; }
    .delay-700 { animation-delay: 700ms; }
    .delay-1000 { animation-delay: 1000ms; }

    /* Animation Play State */
    .paused { animation-play-state: paused; }
    .running { animation-play-state: running; }

    /* Hover Animation Utilities */
    .hover\:animate:hover { animation-play-state: running; }
    .hover\:pause:hover { animation-play-state: paused; }

    /* Hover Effects */
    .hover\:scale {
        transition: transform var(--animation-duration-normal) var(--ease-out);
    }

    .hover\:scale:hover {
        transform: scale(var(--scale-lg));
    }

    .hover\:lift {
        transition: transform var(--animation-duration-normal) var(--ease-out);
    }

    .hover\:lift:hover {
        transform: translateY(calc(-1 * var(--move-sm)));
    }

    /* Active Effects */
    .active\:scale:active {
        transform: scale(var(--scale-sm));
        transition: transform var(--animation-duration-fast) var(--ease-in-out);
    }

    /* Staggered Animation */
    .stagger-children > * {
        animation-fill-mode: both;
        animation-duration: var(--animation-duration-normal);
        animation-timing-function: var(--ease-out-cubic);
        animation-play-state: paused;
    }

    .stagger-children > *:nth-child(1) { animation-delay: 0.1s; }
    .stagger-children > *:nth-child(2) { animation-delay: 0.2s; }
    .stagger-children > *:nth-child(3) { animation-delay: 0.3s; }
    .stagger-children > *:nth-child(4) { animation-delay: 0.4s; }
    .stagger-children > *:nth-child(5) { animation-delay: 0.5s; }
    .stagger-children > *:nth-child(6) { animation-delay: 0.6s; }
    .stagger-children > *:nth-child(7) { animation-delay: 0.7s; }
    .stagger-children > *:nth-child(8) { animation-delay: 0.8s; }
    .stagger-children > *:nth-child(9) { animation-delay: 0.9s; }
    .stagger-children > *:nth-child(10) { animation-delay: 1s; }

    /* Scroll-Triggered Animations */
    .scroll-fade {
        opacity: 0;
        transform: translateY(var(--move-sm));
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
    }

    .scroll-fade.visible {
        opacity: 1;
        transform: translateY(0);
    }

    .scroll-scale {
        opacity: 0;
        transform: scale(var(--scale-sm));
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
    }

    .scroll-scale.visible {
        opacity: 1;
        transform: scale(1);
    }

    .scroll-slide-left {
        opacity: 0;
        transform: translateX(calc(-1 * var(--move-md)));
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
    }

    .scroll-slide-left.visible {
        opacity: 1;
        transform: translateX(0);
    }

    .scroll-slide-right {
        opacity: 0;
        transform: translateX(var(--move-md));
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
    }

    .scroll-slide-right.visible {
        opacity: 1;
        transform: translateX(0);
    }

    /* Scroll-Driven Animations */
    .scroll-reveal {
        opacity: 0;
        animation: reveal linear forwards;
        animation-timeline: scroll(root);
        animation-range: entry 5% cover 15%;
    }

    /* Parallax-Effekt mit Scroll-Driven Animation */
    .parallax-container {
        height: 40vh;
        position: relative;
        overflow: hidden;
    }

    .parallax-bg {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
        animation-timeline: scroll();
        animation-range: entry exit;
        animation: parallax ease-out both;
    }

    /* Parallax und Scroll-Effekte */
    .parallax {
        transition: transform var(--animation-duration-slow) var(--ease-out);
        will-change: transform;
    }

    .parallax-fast {
        transition-duration: var(--animation-duration-normal);
    }

    .parallax-slow {
        transition-duration: var(--animation-duration-slower);
    }

    /* Text Reveal Effects */
    .text-reveal {
        opacity: 0;
        transform: translateY(var(--move-sm));
        transition: opacity var(--animation-duration-normal) var(--ease-in-out),
                    transform var(--animation-duration-normal) var(--ease-in-out);
    }

    .text-reveal.visible {
        opacity: 1;
        transform: translateY(0);
    }

    .text-slide-in {
        opacity: 0;
        transform: translateX(calc(-1 * var(--move-md)));
        transition: opacity var(--animation-duration-normal) var(--ease-in-out),
                    transform var(--animation-duration-normal) var(--ease-in-out);
    }

    .text-slide-in.visible {
        opacity: 1;
        transform: translateX(0);
    }

    /* Progress and Loading Animations */
    @keyframes progress {
        from { width: 0; }
        to { width: 100%; }
    }

    .progress {
        animation: progress var(--animation-duration-slower) var(--ease-linear) forwards;
    }

    /* Scroll-Driven Progress Bar */
    .progress-bar {
        position: fixed;
        top: 0;
        left: 0;
        height: 4px;
        width: 0%;
        background-color: var(--color-primary);
        z-index: 1000;
        animation-name: progress;
        animation-timing-function: linear;
        animation-timeline: scroll(root);
    }

    /* View Transition API Anpassung */
    ::view-transition-new(content) {
        animation: 300ms cubic-bezier(0.4, 0, 0.2, 1) both fade-in,
                   300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
    }

    ::view-transition-old(content) {
        animation: 300ms cubic-bezier(0.4, 0, 0.2, 1) both fade-out,
                   300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-left;
    }

    /* View Transition f√ºr Root */
    ::view-transition-old(root) {
        animation: 90ms cubic-bezier(0.4, 0, 1, 1) both fade-out;
    }

    ::view-transition-new(root) {
        animation: 210ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in;
    }

    /* View Transition f√ºr Header */
    ::view-transition-old(header),
    ::view-transition-new(header) {
        height: 100%;
        position: absolute;
        inset: 0;
    }

    ::view-transition-old(header) {
        animation: 300ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
                 300ms cubic-bezier(0.4, 0, 0.6, 1) both slide-from-left;
    }

    ::view-transition-new(header) {
        animation: 300ms cubic-bezier(0, 0, 0.2, 1) both fade-in,
                 300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
    }

    /* Weitere View Transition Anpassungen f√ºr UI-Elemente */
    .js-view-transition {
        view-transition-name: var(--view-transition, "auto");
    }

    /* Fallbacks f√ºr Browser ohne Scroll-Driven Animations */
    @supports not (animation-timeline: scroll()) {
        .scroll-reveal {
            opacity: 1;
            transform: translateY(0);
            animation: none;
        }
        
        .parallax-bg {
            animation: none;
        }
        
        .progress-bar {
            animation: none;
            display: none;
        }
    }

    /* Staggered Animation Children */
    .stagger-children > * {
        animation-fill-mode: both;
        animation-duration: var(--animation-duration-normal);
        animation-timing-function: var(--ease-out-cubic);
        animation-play-state: paused;
    }

    .stagger-children > *:nth-child(1) { animation-delay: 0.1s; }
    .stagger-children > *:nth-child(2) { animation-delay: 0.2s; }
    .stagger-children > *:nth-child(3) { animation-delay: 0.3s; }
    .stagger-children > *:nth-child(4) { animation-delay: 0.4s; }
    .stagger-children > *:nth-child(5) { animation-delay: 0.5s; }
    .stagger-children > *:nth-child(6) { animation-delay: 0.6s; }
    .stagger-children > *:nth-child(7) { animation-delay: 0.7s; }
    .stagger-children > *:nth-child(8) { animation-delay: 0.8s; }
    .stagger-children > *:nth-child(9) { animation-delay: 0.9s; }
    .stagger-children > *:nth-child(10) { animation-delay: 1s; }

    /* Scroll-Driven Animations */
    .scroll-card {
        opacity: 0;
        transform: translateY(60px) scale(0.95);
        animation: reveal-card ease-out forwards;
        animation-timeline: view();
        animation-range: entry 20% cover 30%;
    }

    .scroll-card:nth-child(2) { animation-delay: 0.2s; }
    .scroll-card:nth-child(3) { animation-delay: 0.4s; }
    .scroll-card:nth-child(4) { animation-delay: 0.6s; }

    @keyframes reveal-card {
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    /* Scroll-Driven Animation Variations */
    .scroll-fade-in {
        opacity: 0;
        animation: fade-in ease-out forwards;
        animation-timeline: view();
        animation-range: entry 10% cover 25%;
    }

    .scroll-slide-up {
        opacity: 0;
        transform: translateY(30px);
        animation: slide-up ease-out forwards;
        animation-timeline: view();
        animation-range: entry 15% cover 35%;
    }

    @keyframes slide-up {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .scroll-slide-in-left {
        opacity: 0;
        transform: translateX(-30px);
        animation: slide-in ease-out forwards;
        animation-timeline: view();
        animation-range: entry 15% cover 35%;
    }

    .scroll-slide-in-right {
        opacity: 0;
        transform: translateX(30px);
        animation: slide-in ease-out forwards;
        animation-timeline: view();
        animation-range: entry 15% cover 35%;
    }

    @keyframes slide-in {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .scroll-scale {
        opacity: 0;
        transform: scale(0.85);
        animation: scale-in ease-out forwards;
        animation-timeline: view();
        animation-range: entry 20% cover 40%;
    }

    /* Scroll-Driven Progress Animations */
    .progress-timeline {
        transform-origin: 0% 50%;
        transform: scaleX(0);
        animation: scale-x 1s linear forwards;
        animation-timeline: scroll();
    }

    @keyframes scale-x {
        to { transform: scaleX(1); }
    }

    /* Scroll-Driven Parallax */
    .parallax-scroll {
        animation: parallax-scroll ease-out both;
        animation-timeline: scroll();
        animation-range: 0% 100%;
    }

    @keyframes parallax-scroll {
        to { transform: translateY(-20%); }
    }

    /* Scroll Target Animation */
    .scroll-target {
        view-timeline-name: --target-timeline;
        animation: target-pulse both ease;
        animation-timeline: --target-timeline;
        animation-range: contain 0% contain 100%;
    }

    @keyframes target-pulse {
        0%, 100% { background-color: transparent; }
        50% { background-color: var(--color-highlight, rgb(255 255 0 / 20%)); }
    }

    /* Scroll-Driven Animation Delays */
    .scroll-delay-100 { animation-delay: 100ms; }
    .scroll-delay-200 { animation-delay: 200ms; }
    .scroll-delay-300 { animation-delay: 300ms; }
    .scroll-delay-400 { animation-delay: 400ms; }
    .scroll-delay-500 { animation-delay: 500ms; }

    /* Microinteractions for Form Elements */
    .input-focus {
        transition: border-color var(--animation-duration-fast), box-shadow var(--animation-duration-fast);
        transition-timing-function: var(--ease-out);
        will-change: border-color, box-shadow;
    }
    
    .input-focus:focus {
        box-shadow: 0 0 0 2px var(--color-focus, rgb(59 130 246 / 50%));
    }
    
    .input-success {
        transform-origin: center right;
        transition: transform var(--animation-duration-fast), opacity var(--animation-duration-fast);
        transition-timing-function: var(--ease-spring);
    }
    
    .input-success.active {
        animation: success-checkmark 0.5s var(--ease-spring) forwards;
    }
    
    @keyframes success-checkmark {
        0% { transform: scale(0); opacity: 0; }
        50% { transform: scale(1.2); opacity: 1; }
        100% { transform: scale(1); opacity: 1; }
    }
    
    /* Improved Hover Transitions */
    .hover-smooth {
        transition: transform var(--animation-duration-fast), 
                    box-shadow var(--animation-duration-fast),
                    background-color var(--animation-duration-fast);
        transition-timing-function: var(--ease-out);
    }
    
    .hover-smooth:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgb(0 0 0 / 10%);
    }
    
    /* Optimized Loading Animation */
    .loading-dots {
        display: inline-flex;
        align-items: center;
    }
    
    .loading-dots::after {
        content: "";
        width: 5px;
        height: 5px;
        border-radius: 50%;
        background-color: currentcolor;
        opacity: 0;
        animation: loading-dots 1.4s infinite ease-in-out;
    }
    
    .loading-dots::before {
        content: "...";
        letter-spacing: 2px;
        animation: loading-dots-text 1.4s infinite ease-in-out;
    }
    
    @keyframes loading-dots {
        0%, 100% { opacity: 0; }
        50% { opacity: 1; }
    }
    
    @keyframes loading-dots-text {
        0% { content: "."; }
        33% { content: ".."; }
        66% { content: "..."; }
        100% { content: "."; }
    }
    
    /* Performance Enhancement with will-change */
    .will-change-transform {
        will-change: transform;
    }
    
    .will-change-opacity {
        will-change: opacity;
    }
    
    .will-change-auto {
        will-change: auto;
    }
    
    /* Apply will-change only on hover/interaction */
    .will-change-on-hover {
        transition: transform var(--animation-duration-fast);
    }
    
    .will-change-on-hover:hover {
        will-change: transform;
    }

    /* Eyecatcher - Dezente Aufmerksamkeitseffekte */
    .focus-attention {
        position: relative;
    }
    
    .focus-attention::after {
        content: "";
        position: absolute;
        inset: -4px;
        border-radius: inherit;
        border: 2px solid var(--color-highlight, rgb(59 130 246 / 70%));
        opacity: 0;
        animation: focus-pulse 2s ease-in-out infinite;
        pointer-events: none;
    }
    
    @keyframes focus-pulse {
        0%, 100% { opacity: 0; transform: scale(0.97); }
        50% { opacity: 1; transform: scale(1.03); }
    }
    
    /* Subtle Hint Animation - dezente Hinweise auf Interaktionsm√∂glichkeiten */
    .subtle-hint {
        position: relative;
    }
    
    .subtle-hint.click::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: var(--color-highlight, rgb(59 130 246 / 70%));
        transform: translate(-50%, -50%);
        opacity: 0;
        animation: hint-click 3s ease-in-out infinite;
        pointer-events: none;
    }
    
    @keyframes hint-click {
        0%, 100% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
        5% { opacity: 0.8; transform: translate(-50%, -50%) scale(1); }
        15% { opacity: 0; transform: translate(-50%, -50%) scale(1.5); }
    }
    
    .subtle-hint.swipe::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 0;
        width: 30px;
        height: 4px;
        background: linear-gradient(
            90deg, 
            var(--color-highlight, rgb(59 130 246 / 70%)) 0%, 
            transparent 100%
        );
        transform: translateY(-50%);
        opacity: 0;
        animation: hint-swipe 4s ease-in-out infinite;
        pointer-events: none;
    }
    
    @keyframes hint-swipe {
        0%, 100% { opacity: 0; left: 0; }
        5% { opacity: 0.8; left: 0; }
        45% { opacity: 0.8; left: calc(100% - 30px); }
        50% { opacity: 0; left: calc(100% - 30px); }
    }

    /* Use with JavaScript */
    .animate-when-visible {
        opacity: 0;
        transform: translateY(var(--move-md));
        transition: opacity var(--animation-duration-normal), 
                    transform var(--animation-duration-normal);
        transition-timing-function: var(--ease-out);
    }
    
    .animate-when-visible.is-visible {
        opacity: 1;
        transform: translateY(0);
    }

    /* Respect user preference for reduced motion */
    @container root (prefers-reduced-motion: reduce) {
        .animate-fade-in,
        .animate-fade-out,
        .animate-slide-in,
        .animate-slide-out,
        .animate-slide-up,
        .animate-slide-down,
        .animate-slide-left,
        .animate-slide-right,
        .animate-rotate,
        .animate-pulse,
        .animate-bounce,
        .animate-spin,
        .animate-ping,
        .animate-wiggle,
        .animate-shake,
        .animate-tada,
        .animate-wobble,
        .animate-heartbeat,
        .animate-jello,
        .animate-vibrate,
        .animate-blink,
        .animate-flash {
            animation: none !important;
            transition: none !important;
            transform: none !important;
        }
    }

    /* Optimierte Ein-/Ausblendeffekte */
    .fade-in-optimal {
        opacity: 0;
        transition: opacity var(--animation-duration-normal) var(--ease-out);
    }
    
    .fade-in-optimal.visible {
        opacity: 1;
    }
    
    /* Gestaffeltes Ein-/Ausblenden f√ºr Listen */
    .reveal-list > * {
        opacity: 0;
        transform: translateY(8px);
        transition: opacity var(--animation-duration-fast) var(--ease-out),
                    transform var(--animation-duration-fast) var(--ease-out);
    }
    
    .reveal-list.visible > *:nth-child(1) { 
        opacity: 1; 
        transform: translateY(0);
        transition-delay: 0ms; 
    }
    
    .reveal-list.visible > *:nth-child(2) { 
        opacity: 1; 
        transform: translateY(0);
        transition-delay: 50ms; 
    }
    
    .reveal-list.visible > *:nth-child(3) { 
        opacity: 1; 
        transform: translateY(0);
        transition-delay: 100ms; 
    }
    
    .reveal-list.visible > *:nth-child(4) { 
        opacity: 1; 
        transform: translateY(0);
        transition-delay: 150ms; 
    }
    
    .reveal-list.visible > *:nth-child(5) { 
        opacity: 1; 
        transform: translateY(0);
        transition-delay: 200ms; 
    }
    
    .reveal-list.visible > *:nth-child(n+6) { 
        opacity: 1; 
        transform: translateY(0);
        transition-delay: 250ms; 
    }
    
    /* Ladezustand f√ºr Content */
    .content-loading {
        position: relative;
        min-height: 100px;
    }
    
    .content-loading::before {
        content: "";
        position: absolute;
        inset: 0;
        background-color: var(--color-skeleton, rgb(229 231 235));
        border-radius: 4px;
        animation: skeleton-pulse 1.5s infinite ease-in-out;
    }
    
    @keyframes skeleton-pulse {
        0%, 100% { opacity: 0.5; }
        50% { opacity: 0.8; }
    }

    .content-loading.loaded::before {
        animation: skeleton-fade-out 0.5s forwards ease-out;
    }
    
    @keyframes skeleton-fade-out {
        to { opacity: 0; visibility: hidden; }
    }

    /* Erz√§hl-Animationen f√ºr Storytelling und Onboarding */
    .story-sequence {
        position: relative;
        opacity: 0;
        transform: translateY(15px);
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
    }
    
    .story-sequence.active {
        opacity: 1;
        transform: translateY(0);
    }
    
    .story-sequence.exit {
        opacity: 0;
        transform: translateY(-15px);
        transition-timing-function: var(--ease-in);
    }
    
    /* Kapitel-√úberg√§nge f√ºr Onboarding/Walkthrough */
    .chapter-transition {
        position: relative;
        transition: transform var(--animation-duration-slow) var(--ease-in-out),
                    opacity var(--animation-duration-slow) var(--ease-in-out);
    }
    
    .chapter-transition.next-enter {
        opacity: 0;
        transform: translateX(50px);
    }
    
    .chapter-transition.next-enter-active {
        opacity: 1;
        transform: translateX(0);
    }
    
    .chapter-transition.prev-enter {
        opacity: 0;
        transform: translateX(-50px);
    }
    
    .chapter-transition.prev-enter-active {
        opacity: 1;
        transform: translateX(0);
    }
    
    .chapter-transition.exit {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        opacity: 1;
    }
    
    .chapter-transition.next-exit-active {
        opacity: 0;
        transform: translateX(-50px);
    }
    
    .chapter-transition.prev-exit-active {
        opacity: 0;
        transform: translateX(50px);
    }

    /* Verbesserte Accordion/Collapse-Effekte */
    .collapse-smooth {
        overflow: hidden;
        transition: height var(--animation-duration-normal) var(--ease-in-out);
        will-change: height;
        height: 0;
    }
    
    .collapse-smooth.expanded {
        height: var(--collapse-height, auto);
    }
    
    /* Nat√ºrlicher wirkende Accordion-Animation */
    .accordion-content {
        opacity: 0;
        transform: translateY(-8px);
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
        transition-delay: 50ms;
    }
    
    .accordion-content.expanded {
        opacity: 1;
        transform: translateY(0);
    }

    /* Toast-Benachrichtigungen */
    .toast-notification {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity var(--animation-duration-normal) var(--ease-out),
                    transform var(--animation-duration-normal) var(--ease-out);
    }
    
    .toast-notification.show {
        opacity: 1;
        transform: translateY(0);
    }
    
    .toast-notification.hide {
        opacity: 0;
        transform: translateY(-20px);
        transition-timing-function: var(--ease-in);
    }
    
    /* Seitenbl√§ttereffekt f√ºr Karussells oder Bildergalerien */
    .page-turn {
        perspective: 1200px;
        transform-style: preserve-3d;
        position: relative;
    }
    
    .page-turn-content {
        backface-visibility: hidden;
        transition: transform var(--animation-duration-slow) var(--ease-in-out-cubic);
        transform-origin: center left;
    }
    
    .page-turn-content.turning {
        transform: rotateY(-180deg);
    }
    
    .page-turn-content.next {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        transform: rotateY(180deg);
    }
    
    .page-turn-content.next.turning {
        transform: rotateY(0deg);
    }
}