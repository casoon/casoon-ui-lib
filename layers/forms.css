@layer forms {
  /* Form Variables */
  :root {
    --form-gap: var(--spacing-4);
    --form-padding: var(--spacing-4);
    --form-padding-y: var(--spacing-2);
    --form-padding-x: var(--spacing-3);
    --form-font-size: var(--font-size-base);
    --form-line-height: var(--line-height-base);
    --form-color: var(--color-text-primary);
    --form-background: var(--color-background);
    --form-border-color: var(--color-border);
    --form-border-radius: var(--border-radius-md);
    --form-box-shadow: var(--shadow-sm);
    --form-transition: all var(--transition-normal);
    
    /* Input spezifische Variablen */
    --input-padding-y: var(--spacing-2);
    --input-padding-x: var(--spacing-3);
    --input-height: 2.5rem;
    --input-font-size: var(--font-size-base);
    --input-bg: var(--color-background);
    --input-color: var(--color-text-primary);
    --input-border-color: var(--color-border);
    --input-border-width: 1px;
    --input-border-radius: var(--border-radius-md);
    
    /* Select spezifische Variablen */
    --select-padding-right: 2.5rem;
    --select-indicator-padding: 1.75rem;
    --select-indicator-size: 0.75rem;
    --select-indicator-color: var(--color-text-secondary);
    
    /* Checkbox/Radio spezifische Variablen */
    --control-indicator-size: 1.25rem;
    --control-indicator-bg: var(--color-background);
    --control-indicator-border-color: var(--color-border);
    --control-indicator-checked-bg: var(--color-primary-500);
    --control-indicator-checked-border-color: var(--color-primary-500);
    --control-indicator-checked-color: var(--color-white);
  }

  /**
   * Hinweis zu modularen Komponenten:
   * Einige Formularkomponenten sind auch als separate Module verfügbar:
   * - input.module.css - Für Input-Felder
   * - select.module.css - Für Select-Felder
   * - checkbox.module.css - Für Checkboxen
   * - radio.module.css - Für Radio-Buttons
   * - textarea.module.css - Für mehrzeilige Texteingaben
   * - switch.module.css - Für Toggle-Schalter
   * - file.module.css - Für Datei-Upload-Felder
   * - input-group.module.css - Für Eingabegruppen mit Buttons/Icons
   * 
   * Die Module bieten umfangreichere Funktionen und Varianten, 
   * während diese globalen Klassen für einfache Formulare ausreichen.
   */

  /* Form Base */
  .form {
    display: flex;
    flex-direction: column;
    gap: var(--form-gap);
    padding: var(--form-padding);
    background-color: var(--form-background);
    color: var(--form-color);
  }

  .form-inline {
    display: flex;
    flex-flow: row wrap;
    align-items: flex-end;
    gap: var(--spacing-4);
  }

  .form-inline .form-group {
    flex: 1 0 auto;
    min-width: 250px;
    margin-bottom: 0;
  }

  /* Form Group */
  .form-group {
    margin-bottom: var(--spacing-4);
  }

  .form-group:last-child {
    margin-bottom: 0;
  }

  /* Form Row */
  .form-row {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-4);
  }

  .form-row > * {
    flex: 1;
    min-width: 200px;
  }

  /* Form Label */
  .form-label {
    display: block;
    margin-bottom: var(--spacing-1);
    font-weight: var(--font-weight-medium);
    color: var(--color-text-primary);
  }

  /* Required Label */
  .form-label.required::after {
    content: "*";
    color: var(--color-error);
    margin-left: var(--spacing-1);
  }

  /* Form Text (Hilfetext) */
  .form-text {
    display: block;
    margin-top: var(--spacing-1);
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  /* Form Control - für Input, Textarea, Select */
  .form-control {
    display: block;
    width: 100%;
    padding: var(--input-padding-y) var(--input-padding-x);
    font-size: var(--input-font-size);
    line-height: var(--form-line-height);
    color: var(--input-color);
    background-color: var(--input-bg);
    border: var(--input-border-width) solid var(--input-border-color);
    border-radius: var(--input-border-radius);
    box-shadow: var(--form-box-shadow);
    transition: var(--form-transition);
  }

  /* Form Control Focus */
  .form-control:focus {
    border-color: var(--color-primary-500);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
    outline: none;
  }

  /* Form Control Placeholders */
  .form-control::placeholder {
    color: var(--color-text-tertiary);
    opacity: 1;
  }

  /* Form Control Disabled */
  .form-control:disabled,
  .form-control[readonly] {
    background-color: var(--color-gray-100);
    opacity: 0.7;
    cursor: not-allowed;
  }

  /* Form Validierung */
  .form-control.is-valid {
    border-color: var(--color-success);
  }

  .form-control.is-valid:focus {
    border-color: var(--color-success);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-success-rgb), 0.25);
  }

  .form-control.is-invalid {
    border-color: var(--color-error);
  }

  .form-control.is-invalid:focus {
    border-color: var(--color-error);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-error-rgb), 0.25);
  }

  /* Validation Feedback */
  .valid-feedback,
  .invalid-feedback {
    display: none;
    width: 100%;
    margin-top: var(--spacing-1);
    font-size: var(--font-size-sm);
  }

  .valid-feedback {
    color: var(--color-success);
  }

  .invalid-feedback {
    color: var(--color-error);
  }

  .was-validated .form-control:valid ~ .valid-feedback,
  .was-validated .form-control:invalid ~ .invalid-feedback,
  .form-control.is-valid ~ .valid-feedback,
  .form-control.is-invalid ~ .invalid-feedback {
    display: block;
  }

  /* Form Control Größen */
  .form-control-sm {
    padding: var(--spacing-1) var(--spacing-2);
    font-size: var(--font-size-sm);
    height: calc(var(--input-height) * 0.85);
    border-radius: var(--border-radius-sm);
  }

  .form-control-lg {
    padding: var(--spacing-3) var(--spacing-4);
    font-size: var(--font-size-lg);
    height: calc(var(--input-height) * 1.15);
    border-radius: var(--border-radius-lg);
  }

  /* Select Kontrolle */
  .form-select {
    display: block;
    width: 100%;
    padding-right: var(--select-indicator-padding);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right var(--input-padding-x) center;
    background-size: var(--select-indicator-size);
    appearance: none;
  }

  .form-select-sm {
    padding-right: calc(var(--select-indicator-padding) * 0.85);
    background-position: right var(--spacing-2) center;
  }

  .form-select-lg {
    padding-right: calc(var(--select-indicator-padding) * 1.15);
    background-position: right var(--spacing-4) center;
  }

  /* Textarea */
  textarea.form-control {
    min-height: 6rem;
    resize: vertical;
  }

  /* Checkboxes & Radios */
  .form-check {
    display: block;
    min-height: var(--control-indicator-size);
    padding-left: calc(var(--control-indicator-size) + var(--spacing-2));
    margin-bottom: var(--spacing-2);
    position: relative;
  }

  .form-check:last-child {
    margin-bottom: 0;
  }

  .form-check-inline {
    display: inline-flex;
    align-items: center;
    margin-right: var(--spacing-4);
  }

  /* Checkboxes & Radios - Input */
  .form-check-input {
    position: absolute;
    margin-top: calc((var(--form-line-height) * var(--form-font-size) - var(--control-indicator-size)) / 2);
    margin-left: calc(-1 * (var(--control-indicator-size) + var(--spacing-2)));
    width: var(--control-indicator-size);
    height: var(--control-indicator-size);
    border: var(--input-border-width) solid var(--control-indicator-border-color);
    background-color: var(--control-indicator-bg);
    appearance: none;
    print-color-adjust: exact;
    transition: var(--form-transition);
  }

  .form-check-input[type="checkbox"] {
    border-radius: var(--border-radius-sm);
  }

  .form-check-input[type="radio"] {
    border-radius: 50%;
  }

  .form-check-input:active {
    filter: brightness(90%);
  }

  .form-check-input:focus {
    border-color: var(--color-primary-500);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
  }

  .form-check-input:checked {
    background-color: var(--control-indicator-checked-bg);
    border-color: var(--control-indicator-checked-border-color);
  }

  .form-check-input:checked[type="checkbox"] {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='white' d='M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z'/%3E%3C/svg%3E");
    background-size: var(--select-indicator-size);
    background-position: center;
    background-repeat: no-repeat;
  }

  .form-check-input:checked[type="radio"] {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Ccircle r='4' fill='white' cx='8' cy='8'/%3E%3C/svg%3E");
    background-size: var(--select-indicator-size);
    background-position: center;
    background-repeat: no-repeat;
  }

  .form-check-input:disabled {
    pointer-events: none;
    filter: none;
    opacity: 0.5;
  }

  .form-check-input:disabled ~ .form-check-label {
    opacity: 0.5;
    cursor: default;
  }

  .form-check-label {
    display: inline-block;
    cursor: pointer;
  }

  /* Switch (Toggle) */
  .form-switch {
    padding-left: calc(var(--control-indicator-size) * 2);
  }

  .form-switch .form-check-input {
    width: calc(var(--control-indicator-size) * 1.75);
    height: calc(var(--control-indicator-size) * 0.85);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Ccircle r='3' fill='rgba(0,0,0,0.25)' cx='3' cy='8'/%3E%3C/svg%3E");
    background-position: left center;
    background-repeat: no-repeat;
    border-radius: calc(var(--control-indicator-size) * 0.85);
    transition: background-position var(--transition-normal);
  }

  .form-switch .form-check-input:checked {
    background-position: right center;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Ccircle r='3' fill='%23fff' cx='13' cy='8'/%3E%3C/svg%3E");
  }

  /**
   * File Upload
   * 
   * Hinweis: Für erweiterte File-Upload-Funktionen, verwenden Sie das file.module.css Modul,
   * das weitere Funktionen und Varianten bietet wie Drag & Drop, Mehrfachauswahl, 
   * verschiedene Größen und Farbschemen.
   */
  .form-file {
    position: relative;
  }

  .form-file-input {
    position: relative;
    z-index: 2;
    width: 100%;
    height: var(--input-height);
    margin: 0;
    opacity: 0;
  }

  .form-file-label {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1;
    display: flex;
    height: var(--input-height);
    border: var(--input-border-width) solid var(--input-border-color);
    border-radius: var(--input-border-radius);
    background-color: var(--input-bg);
  }

  .form-file-text {
    padding: var(--input-padding-y) var(--input-padding-x);
    border-right: none;
    background-color: var(--input-bg);
    color: var(--color-text-tertiary);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 1;
  }

  .form-file-button {
    padding: var(--input-padding-y) var(--input-padding-x);
    z-index: 3;
    display: block;
    background-color: var(--color-gray-200);
    border-left: inherit;
    color: var(--color-text-primary);
    border-top-right-radius: var(--input-border-radius);
    border-bottom-right-radius: var(--input-border-radius);
  }

  /* Form Actions */
  .form-actions {
    display: flex;
    gap: var(--spacing-3);
    margin-top: var(--spacing-6);
  }

  .form-actions > * {
    flex: 0 0 auto;
  }

  .form-actions.justify-end {
    justify-content: flex-end;
  }

  /**
   * Input Group
   * 
   * Hinweis: Für erweiterte Input-Gruppen-Funktionen, verwenden Sie das input-group.module.css Modul,
   * das weitere Features und Varianten bietet wie verschiedene Größen, Farbschemen,
   * Icon-Unterstützung und vertikale Gruppierungen.
   */
  .input-group {
    position: relative;
    display: flex;
    flex-wrap: nowrap;
    align-items: stretch;
    width: 100%;
  }

  .input-group > .form-control,
  .input-group > .form-select {
    position: relative;
    flex: 1 1 auto;
    width: 1%;
  }

  .input-group > .form-control:not(:first-child),
  .input-group > .form-select:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .input-group > .form-control:not(:last-child),
  .input-group > .form-select:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .input-group-text {
    display: flex;
    align-items: center;
    padding: var(--input-padding-y) var(--input-padding-x);
    font-size: var(--form-font-size);
    background-color: var(--color-gray-100);
    border: var(--input-border-width) solid var(--input-border-color);
    white-space: nowrap;
  }

  .input-group-text:first-child {
    border-top-left-radius: var(--input-border-radius);
    border-bottom-left-radius: var(--input-border-radius);
  }

  .input-group-text:last-child {
    border-top-right-radius: var(--input-border-radius);
    border-bottom-right-radius: var(--input-border-radius);
  }

  /* Abwärtskompatibilität */
  .input {
    display: block;
    width: 100%;
    padding: var(--input-padding-y) var(--input-padding-x);
    font-size: var(--input-font-size);
    line-height: var(--form-line-height);
    color: var(--input-color);
    background-color: var(--input-bg);
    border: var(--input-border-width) solid var(--input-border-color);
    border-radius: var(--input-border-radius);
    box-shadow: var(--form-box-shadow);
    transition: var(--form-transition);
  }

  /* Reduzierte Bewegung */
  @media (prefers-reduced-motion: reduce) {
    .form-control,
    .form-select,
    .form-check-input,
    .form-switch .form-check-input {
      transition: none;
    }
  }

  /* Responsive Anpassungen */
  @media (width <= 768px) {
    .form-inline {
      flex-direction: column;
      gap: var(--spacing-3);
    }

    .form-inline .form-group {
      width: 100%;
    }

    .form-row {
      flex-direction: column;
      gap: var(--spacing-3);
    }

    .form-row > * {
      width: 100%;
    }

    .form-actions {
      flex-direction: column;
      gap: var(--spacing-2);
    }

    .form-actions > * {
      width: 100%;
    }

    .input-group {
      flex-wrap: wrap;
    }

    .input-group > .form-control,
    .input-group > .form-select,
    .input-group-text {
      flex: 0 0 100%;
      width: 100%;
      border-radius: var(--input-border-radius);
      margin-bottom: -1px;
    }

    .input-group > *:not(:first-child, :last-child) {
      border-radius: 0;
    }

    .input-group > :first-child {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    .input-group > :last-child {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      margin-bottom: 0;
    }
  }
}  