/**
 * Form CSS Module
 * 
 * Diese Datei enthält die CSS-Module für Formulare.
 * Aktualisiert mit :has()-Selektoren und logischen Properties.
 * 
 * Verwendung:
 * 
 * 1. Basis-Formular:
 * <form className={styles.form}>
 *   <div className={styles.group}>
 *     <label className={styles.label}>Label</label>
 *     <input className={styles.input} type="text" />
 *     <span className={styles.error}>Fehlermeldung</span>
 *   </div>
 *   <button className={styles.button} type="submit">Absenden</button>
 * </form>
 * 
 * 2. Formular mit Varianten:
 * <form className={`${styles.form} ${styles.inline}`}>...</form>
 * <form className={`${styles.form} ${styles.vertical}`}>...</form>
 * 
 * Technische Details:
 * - Verwendet CSS-Variablen für Farben und Größen
 * - Optimiert mit will-change und transform
 * - Responsive Anpassungen für mobile Geräte
 * - Reduzierte Bewegung wird berücksichtigt
 * 
 * Performance-Hinweise:
 * - Animationen sind hardware-beschleunigt
 * - Reduzierte Bewegung wird automatisch berücksichtigt
 */

@layer components {
    /* Form Variables */
    .form {
        --form-gap: var(--spacing-2);
        --form-padding: var(--spacing-2);
        --form-background: var(--color-white);
        --form-text: var(--color-gray-900);
        --form-label-margin-block-end: var(--spacing-1);
        --form-input-margin-block-end: var(--spacing-2);
        --form-border-color: var(--color-gray-300);
        --form-border-color-focus: var(--color-primary);
        --form-border-color-error: var(--color-error);
        --form-border-color-success: var(--color-success);
        --form-error-text: var(--color-error);
        --form-success-text: var(--color-success);
    }

    /* Base Form */
    .form {
        display: flex;
        flex-direction: column;
        gap: var(--form-gap);
        padding: var(--form-padding);
        background-color: var(--form-background);
        color: var(--form-text);
    }

    /* Group */
    .group {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-1);
        margin-block-end: var(--form-input-margin-block-end);
    }

    /* Verwendung von :has() für kontextuelle Styling-Änderungen */
    .group:has(.input:focus) {
        /* Highlight der gesamten Gruppe, wenn das Eingabefeld fokussiert ist */
        background-color: var(--color-gray-50);
    }

    .group:has(.error) {
        /* Visuelles Feedback für Gruppen mit Fehlern */
        padding-inline-start: var(--spacing-2);
        border-inline-start: 2px solid var(--form-border-color-error);
    }

    .group:has(.success) {
        /* Visuelles Feedback für Gruppen mit erfolgreicher Validierung */
        padding-inline-start: var(--spacing-2);
        border-inline-start: 2px solid var(--form-border-color-success);
    }

    /* Label */
    .label {
        font-weight: var(--font-weight-medium);
        color: var(--color-gray-700);
        margin-block-end: var(--form-label-margin-block-end);
    }

    /* Fallback für Browser ohne :has() */
    .is-required .label::after {
        content: "*";
        color: var(--form-error-text);
        margin-inline-start: var(--spacing-1);
    }

    /* Moderne Variante mit :has() */
    .label:has(+ .input[required])::after {
        content: "*";
        color: var(--form-error-text);
        margin-inline-start: var(--spacing-1);
    }

    /* Input */
    .input {
        padding-block: var(--spacing-2);
        padding-inline: var(--spacing-4);
        border: 1px solid var(--form-border-color);
        border-radius: var(--radius-base);
        background-color: var(--bg-white);
        color: var(--text-gray-900);
    }

    .input:focus {
        outline: none;
        border-color: var(--form-border-color-focus);
        box-shadow: var(--shadow-sm);
    }

    /* Textarea */
    .textarea {
        padding-block: var(--spacing-2);
        padding-inline: var(--spacing-4);
        border: 1px solid var(--form-border-color);
        border-radius: var(--radius-base);
        background-color: var(--bg-white);
        color: var(--text-gray-900);
        resize: vertical;
    }

    /* Select */
    .select {
        padding-block: var(--spacing-2);
        padding-inline: var(--spacing-4);
        border: 1px solid var(--form-border-color);
        border-radius: var(--radius-base);
        background-color: var(--bg-white);
        color: var(--text-gray-900);
        background-repeat: no-repeat;
        background-position: right var(--spacing-2) center;
        background-size: var(--spacing-6);
        appearance: none;
    }

    /* Erweiterte Validierungsstile mit :has() */
    .form:has(.input:invalid:not(:focus, :placeholder-shown)) .error-message {
        display: block;
    }

    .form:has(.input:valid:not(:placeholder-shown)) .success-message {
        display: block;
    }

    /* Fehler- und Erfolgsmeldungen */
    .error-message {
        display: none;
        color: var(--form-error-text);
        font-size: var(--font-size-sm);
        margin-block-start: var(--spacing-1);
    }

    .success-message {
        display: none;
        color: var(--form-success-text);
        font-size: var(--font-size-sm);
        margin-block-start: var(--spacing-1);
    }

    /* RTL-Unterstützung automatisch durch logische Properties */
    [dir="rtl"] .select {
        background-position: left var(--spacing-2) center;
    }

    /* Checkbox & Radio */
    .checkbox,
    .radio {
        display: var(--display-flex);
        align-items: var(--position-center);
        gap: var(--spacing-2);
    }

    .checkbox input,
    .radio input {
        width: var(--spacing-4);
        height: var(--spacing-4);
        border: 1px solid var(--border-gray-300);
        border-radius: var(--radius-base);
        background-color: var(--bg-white);
    }

    /* Error */
    .error {
        color: var(--text-red-500);
        font-size: var(--font-size-sm);
        margin-top: var(--spacing-1);
    }

    /* Success */
    .success {
        color: var(--text-green-500);
        font-size: var(--font-size-sm);
        margin-top: var(--spacing-1);
    }

    /* Help Text */
    .help {
        font-size: 0.75rem;
        color: var(--color-text-secondary);
    }

    /* Button */
    .button {
        align-self: flex-start;
    }

    /* Layout Variants */
    .inline {
        flex-direction: row;
        align-items: flex-end;
    }

    .vertical {
        flex-direction: column;
    }

    /* Focus States */
    .input:focus-visible {
        box-shadow: 0 0 0 2px var(--color-primary-500), 0 0 0 4px var(--color-background);
    }

    /* Disabled State */
    .input:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    /* Reduced Motion */
    @media (prefers-reduced-motion: reduce) {
        .input {
            transition: none;
        }
    }

    /* Responsive */
    @media (width <= 768px) {
        .form {
            --form-padding: var(--spacing-3);

            gap: var(--spacing-3);
        }
    }

    /* Integrierte has-Selektoren für Form-Komponenten */
    @layer has-selectors {
        /* Grundlegende Form-Validierung mit :has() */
        .form-group:has(input:invalid) {
            border-inline-start: 3px solid var(--color-error-500);
            padding-inline-start: 0.5rem;
        }

        .form-group:has(input:valid) {
            border-inline-start: 3px solid var(--color-success-500);
            padding-inline-start: 0.5rem;
        }

        .form-group:has(input:focus) {
            background-color: var(--color-surface-100);
        }

        /* Styling für leere Eingabefelder */
        .form-group:has(input:placeholder-shown) label {
            color: var(--color-text-muted);
        }

        /* Hervorhebung aktiver Formularfelder */
        .form-group:has(input:focus) {
            background-color: color-mix(in srgb, var(--color-primary-100) 15%, transparent);
        }

        /* Labels mit :has() beeinflussen */
        label:has(+ input:focus) {
            color: var(--color-primary-700);
            font-weight: 600;
        }

        label:has(+ input:invalid) {
            color: var(--color-error-700);
        }

        label:has(+ input:valid) {
            color: var(--color-success-700);
        }

        /* Formular-Validierung mit verbesserten Labels */
        .form-group:has(input:required) .form-label::after {
            content: " *";
            color: var(--color-error-500);
        }

        /* Fokus für zugehörige Elemente */
        .form-container:has(input:focus) .form-helper-text {
            color: var(--color-primary-700);
        }

        /* Verbesserte Form-Layouts */
        .form-row:has(> .form-group) {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .form-row:has(> .form-group) > .form-group {
            margin-block-end: 0;
        }

        /* Form-Check Styling */
        .form-check:has(input:checked) label {
            color: var(--color-primary-600);
            font-weight: bold;
        }

        /* Checkbox- und Radio-Wrapper */
        .checkbox-wrapper:has(input:checked) {
            background-color: var(--color-primary-50);
        }

        .radio-wrapper:has(input:checked) {
            background-color: var(--color-primary-50);
        }

        /* Styling für Formulareingaben mit Fehlern */
        .form-group:has(.form-input.is-invalid) {
            border-inline-start: 3px solid var(--color-error-500);
        }

        /* Styling für Formulareingaben mit Erfolgen */
        .form-group:has(.form-input.is-valid) {
            border-inline-start: 3px solid var(--color-success-500);
        }

        /* Erweiterte Form-Validierung */
        form:has(:invalid) {
            border-inline-start: 3px solid var(--color-error-400);
            padding-inline-start: 1rem;
        }

        form:has(:valid:not(:placeholder-shown)) {
            border-inline-start: 3px solid var(--color-success-400);
            padding-inline-start: 1rem;
        }

        form:has(button[type="submit"]) {
            padding-block-end: 1.5rem;
        }

        /* Formulare mit Pflichtfeldern */
        form:has(input:invalid) .submit-button {
            opacity: 0.7;
            cursor: not-allowed;
        }

        /* Komplexe Formularbedingungen */
        .shipping-form:has(input[name="same_address"]:checked) .billing-address {
            display: none;
        }

        /* Floating Label Effekt */
        .form-input:has(:not(:placeholder-shown)) + .form-label {
            transform: translateY(-1.5rem) scale(0.85);
        }

        /* Formularfeldgruppen mit :has() */
        .form-container:has(.error-message) {
            border-color: var(--color-error-500);
        }

        /* Spezielle Selektoren für Formularfelder */
        .field-group:has(select) {
            position: relative;
        }

        .field-group:has(select)::after {
            content: "";
            display: block;
            width: 0.5rem;
            height: 0.5rem;
            border-right: 2px solid currentcolor;
            border-bottom: 2px solid currentcolor;
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%) rotate(45deg);
            pointer-events: none;
        }

        /* Erweiterte Formulardialog-Stile */
        dialog:has(form) {
            max-width: 500px;
            padding: 2rem;
        }

        /* Dynamisches Form-Layout mit :has() */
        .form-grid:has(.form-row:nth-child(n+5)) {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }
    }
} 