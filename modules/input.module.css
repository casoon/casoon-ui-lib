/**
 * Input CSS Module
 * 
 * Diese Datei enthält die CSS-Module für Input-Felder.
 * Die Input-Felder sind performant optimiert und berücksichtigen reduzierte Bewegung.
 * 
 * Verwendung:
 * 
 * 1. Basis-Input:
 * <div className={styles.group}>
 *   <label className={styles.label}>Label</label>
 *   <input className={styles.input} type="text" />
 *   <span className={styles.error}>Fehlermeldung</span>
 * </div>
 * 
 * 2. Input mit Varianten:
 * <input className={`${styles.input} ${styles.primary}`} type="text" />
 * <input className={`${styles.input} ${styles.secondary}`} type="text" />
 * 
 * 3. Input mit Größen:
 * <input className={`${styles.input} ${styles.small}`} type="text" />
 * <input className={`${styles.input} ${styles.large}`} type="text" />
 * 
 * Technische Details:
 * - Verwendet CSS-Variablen für Farben und Größen
 * - Optimiert mit will-change und transform
 * - Responsive Anpassungen für mobile Geräte
 * - Reduzierte Bewegung wird berücksichtigt
 * 
 * Performance-Hinweise:
 * - Animationen sind hardware-beschleunigt
 * - Reduzierte Bewegung wird automatisch berücksichtigt
 */

@layer components {
    /* Input Variables */
    .input {
        --input-padding: 0.5rem 1rem;
        --input-font-size: 1rem;
        --input-border-radius: 0.375rem;
        --input-background: var(--color-background);
        --input-text: var(--color-text);
        --input-border: 1px solid var(--color-border);
        --input-transition: all var(--transition-normal);
    }

    /* Group */
    .group {
        display: flex;
        flex-direction: column;
        gap: var(--input-gap, 0.5rem);
    }

    /* Label */
    .label {
        font-size: 0.875rem;
        font-weight: var(--input-font-weight, 500);
        color: var(--color-text);
    }

    /* Base Input */
    .input {
        padding: var(--input-padding);
        font-size: var(--input-font-size);
        color: var(--input-text);
        background-color: var(--input-background);
        border: var(--input-border);
        border-radius: var(--input-border-radius);
        transition: var(--input-transition);
    }

    /* Size Variants */
    .small {
        --input-padding: 0.25rem 0.5rem;
        --input-font-size: 0.875rem;
    }

    .medium {
        --input-padding: 0.5rem 1rem;
        --input-font-size: 1rem;
    }

    .large {
        --input-padding: 0.75rem 1.5rem;
        --input-font-size: 1.125rem;
    }

    /* Color Variants */
    .primary {
        --input-border: 1px solid var(--color-primary);
    }

    .secondary {
        --input-border: 1px solid var(--color-secondary);
    }

    /* Focus States */
    .input:focus {
        outline: none;
        border-color: var(--color-primary);
        box-shadow: 0 0 0 2px var(--color-primary-100);
    }

    /* Error State */
    .error {
        --input-border: 1px solid var(--color-error);
    }

    .error:focus {
        border-color: var(--color-error);
        box-shadow: 0 0 0 2px var(--color-error-100);
    }

    /* Success State */
    .success {
        --input-border: 1px solid var(--color-success);
    }

    .success:focus {
        border-color: var(--color-success);
        box-shadow: 0 0 0 2px var(--color-success-100);
    }

    /* Disabled State */
    .disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    /* Error Message */
    .errorMessage {
        font-size: 0.75rem;
        color: var(--color-error);
    }

    /* Help Text */
    .help {
        font-size: 0.75rem;
        color: var(--color-text-secondary);
    }

    /* Reduced Motion */
    @media (prefers-reduced-motion: reduce) {
        .input:focus,
        .input-group:focus-within {
            transition: none;
        }
    }

    /* Responsive */
    @media (width <= 768px) {
        .input {
            width: 100%;
        }
        
        .input-lg {
            height: var(--input-height);
            font-size: var(--font-size-base);
        }
        
        .input-group {
            width: 100%;
        }
    }
}

/* Integrierte has-Selektoren für Input-Komponenten */
@layer has-selectors {
  /* Erweiterte Feldvalidierung mit :has() */
  .input-wrapper:has(input:invalid) {
    border-color: var(--color-error-500);
  }

  .input-wrapper:has(input:invalid) .validation-icon {
    color: var(--color-error-500);
    display: inline-block;
  }

  .input-wrapper:has(input:valid:not(:placeholder-shown)) {
    border-color: var(--color-success-500);
  }

  .input-wrapper:has(input:valid:not(:placeholder-shown)) .validation-icon {
    color: var(--color-success-500);
    display: inline-block;
  }

  /* Styling für ausgefüllte vs. leere Eingaben */
  .form-input:has(:not(:placeholder-shown)) + .form-label {
    transform: translateY(-1.5rem) scale(0.85);
    color: var(--color-primary-600);
  }

  /* Verbundene Formularelemente */
  .input-group:has(input:focus) {
    box-shadow: 0 0 0 2px var(--color-primary-300);
  }

  /* Suchfeld mit Ergebnissen */
  .search-container:has(input:focus) .search-results {
    display: block;
  }
}

.input-wrapper {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  container-type: inline-size;
}

.input {
  --input-height: 2.5rem;
  --input-padding: 0.75rem;
  --input-border-width: 1px;
  --input-border-color: var(--color-gray-300);
  --input-border-radius: var(--radius-md, 0.375rem);
  --input-bg: var(--color-white);
  --input-color: var(--color-gray-800);
  --input-placeholder-color: var(--color-gray-400);
  --input-font-size: var(--font-size-base, 1rem);
  --input-focus-border-color: var(--color-primary-500);
  --input-focus-ring-color: var(--color-primary-200);
  --input-focus-ring-width: 3px;
  --input-disabled-bg: var(--color-gray-50);
  --input-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  
  display: block;
  width: 100%;
  height: var(--input-height);
  padding: 0 var(--input-padding);
  color: var(--input-color);
  background-color: var(--input-bg);
  border: var(--input-border-width) solid var(--input-border-color);
  border-radius: var(--input-border-radius);
  font-family: inherit;
  font-size: var(--input-font-size);
  line-height: normal;
  transition: var(--input-transition);
  appearance: none;
}

/* Container Queries ersetzen Media Queries */
@container (prefers-reduced-motion: reduce) {
  .input:focus {
    transition: none;
  }
  
  .input-group:focus-within {
    transition: none;
  }
}

@container (width < 768px) {
  .input {
    width: 100%;
  }
  
  .input-lg {
    height: var(--input-height);
    font-size: var(--font-size-base);
  }
  
  .input-group {
    width: 100%;
  }
} 