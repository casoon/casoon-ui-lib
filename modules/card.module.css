/**
 * Card Module
 * 
 * Ein flexibles Card-Modul für verschiedene Inhaltstypen.
 * Unterstützt verschiedene Layouts, Größen und Varianten.
 * 
 * Verwendung:
 * <div class="card">
 *   <div class="card-header">Titel</div>
 *   <div class="card-body">Inhalt</div>
 *   <div class="card-footer">Footer</div>
 * </div>
 * 
 * Varianten:
 * - .card--primary, .card--secondary, .card--flat
 * - .card--horizontal
 */

@layer module-card {
  /* Card Variables */
  .card {
    --card-bg: var(--color-white, #fff);
    --card-border-color: var(--color-border-light, #e2e8f0);
    --card-border-radius: var(--radius-lg, 0.5rem);
    --card-box-shadow: var(--shadow-sm, 0 1px 2px 0 rgb(0 0 0 / 5%));
    --card-padding-block: var(--space-4, 1rem);
    --card-padding-inline: var(--space-5, 1.25rem);
    --card-gap: var(--space-4);
    --card-hover-shadow: var(--shadow-md);
    --card-hover-border: var(--color-primary-light);
    --card-featured-border: var(--color-accent);
    --card-featured-shadow: var(--shadow-lg);
  }

  /* Base Card */
  .card {
    background-color: var(--card-bg);
    border-radius: var(--card-border-radius);
    border: 1px solid var(--card-border-color);
    box-shadow: var(--card-box-shadow);
    padding: var(--card-padding-block) var(--card-padding-inline);
    display: flex;
    flex-direction: column;
    position: relative;
    width: 100%;
    container-type: inline-size;
    transition: box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out;
    overflow: hidden;
    gap: var(--card-gap);
  }

  /* Card mit Subgrid für komplexe Layouts */
  .card.grid {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: span 3; /* Standard-Spannweite */
  }

  /* Card mit Fokus-Zustand */
  .card:focus-within {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px var(--color-primary-light);
  }

  /* Card mit Hover-Zustand */
  .card:hover {
    box-shadow: var(--card-hover-shadow);
    border-color: var(--card-hover-border);
  }

  /* Relationale Selektoren für Card-Zustände */
  .card:has(.featured) {
    border-color: var(--card-featured-border);
    box-shadow: var(--card-featured-shadow);
  }

  .card:has(.image) {
    padding-block-start: 0;
  }

  .card:has(.actions) {
    padding-block-end: var(--space-2);
  }

  /* Card mit interaktivem Inhalt */
  .card:has(a, button, [role="button"]) {
    cursor: pointer;
  }

  /* Card Elemente */
  .card-header {
    margin-block-end: var(--space-2);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .card-body {
    flex: 1;
  }

  .card-footer {
    margin-block-start: var(--space-2);
    display: flex;
    justify-content: flex-end;
    gap: var(--space-2);
  }

  /* Subgrid in Card Elements */
  .card.grid .card-header,
  .card.grid .card-body,
  .card.grid .card-footer {
    grid-column: 1 / -1;
  }

  /* Card Varianten */
  .card.primary {
    border-color: var(--color-primary);
  }

  .card.secondary {
    border-color: var(--color-secondary);
  }

  .card.accent {
    border-color: var(--color-accent);
  }

  .card.flat {
    box-shadow: none;
  }

  .card.outlined {
    background-color: transparent;
  }

  .card.full-width {
    width: 100%;
  }

  /* RTL Unterstützung mit logischen Properties */
  [dir="rtl"] .card-footer {
    justify-content: flex-start;
  }

  /* Container Queries ersetzen Media Queries */
  @container (width < 768px) {
    .card {
      padding: var(--space-3);
      grid-template-columns: 1fr;
    }
  }

  @container (width < 400px) {
    .card {
      --card-padding-block: var(--space-2);
      --card-padding-inline: var(--space-3);

      gap: var(--space-2);
    }
    
    .card-header {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .card-footer {
      justify-content: flex-start;
      flex-direction: column;
      gap: var(--space-2);
    }
  }

  /* Card-Titel und -Text */
  .card-title {
    margin-top: 0;
    margin-bottom: var(--space-2);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-tight);
    color: var(--color-gray-900);
  }

  .card-subtitle {
    margin-top: calc(-1 * var(--space-1));
    margin-bottom: var(--space-3);
    font-size: var(--font-size-sm);
    color: var(--color-gray-600);
  }

  .card-text {
    margin-top: 0;
    margin-bottom: var(--space-3);
    color: var(--color-gray-700);
  }

  .card-text:last-child {
    margin-bottom: 0;
  }

  /* Card mit Image */
  .card-img-top {
    width: 100%;
    border-top-left-radius: var(--card-border-radius);
    border-top-right-radius: var(--card-border-radius);
  }

  .card-img-bottom {
    width: 100%;
    border-bottom-left-radius: var(--card-border-radius);
    border-bottom-right-radius: var(--card-border-radius);
  }

  /* Horizontale Card */
  .card--horizontal {
    flex-direction: row;
  }

  .card--horizontal .card-img {
    max-width: 33%;
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--card-border-radius);
  }

  /* Card-Gruppen */
  .card-group {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: var(--space-4);
  }

  /* Subgrid für komplexe Layouts (Aufgabe 9) */
  .card-grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--spacing-md);
  }

  .card-grid-item {
    display: grid;

    /* Subgrid auf Spaltenebene anwenden */
    grid-template-columns: subgrid;
    grid-template-rows: auto 1fr auto;
    grid-column: span 1;
  }

  /* Mit Fallback für Browser, die kein Subgrid unterstützen */
  @supports not (grid-template-columns: subgrid) {
    .card-grid-item {
      grid-template-columns: 1fr;
    }
  }

  .card-group {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: auto;
    gap: var(--spacing-md);
  }

  .card-group > .card {
    display: grid;

    /* Subgrid auf Reihen- und Spaltenebene */
    grid-template-rows: subgrid;
    grid-template-columns: subgrid;
    grid-row: span 1;
    grid-column: span 1;
  }

  .card-content {
    display: grid;
    grid-template-rows: auto 1fr auto;
    gap: var(--spacing-sm);
  }

  /* Cards mit Medien oben in einer Reihe synchronisieren */
  .media-cards {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    grid-template-rows: auto 1fr auto;
    gap: var(--spacing-md);
  }

  .media-card {
    display: grid;
    grid-template-rows: subgrid;
    grid-row: span 3;
  }

  .media-card-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Fallback für ältere Browser ohne Subgrid-Support */
  @supports not (grid-template-rows: subgrid) {
    .media-card {
      grid-template-rows: 200px 1fr auto;
    }
  }

  /* Integrierte has-Selektoren für Card-Komponenten */
  @layer has-selectors {
    /* Card-Layout-Selektoren */
    .card:has(.card-header) {
      border-block-start: 4px solid var(--color-primary-500);
    }

    .card:has(.card-footer) {
      border-block-end: 1px solid var(--color-surface-300);
    }

    .card:has(.image-cover) {
      padding-block-start: 0;
      overflow: hidden;
      border-start-start-radius: 0.5rem;
      border-start-end-radius: 0.5rem;
    }

    .card:has(.button) {
      padding-block-end: 3rem;
    }

    .card:has(img) {
      padding-top: 0;
    }

    .card:has(.card-title) .card-body {
      padding-top: var(--spacing-sm);
    }

    .card:has(.card-footer) .card-body {
      padding-bottom: var(--spacing-sm);
    }

    .card:has(:hover) {
      box-shadow: 0 4px 8px rgb(0 0 0 / 10%);
    }

    .card:has(.card-footer .btn:hover) {
      border-color: var(--color-primary-500);
    }

    .card-group:has(.card:hover) .card:not(:hover) {
      opacity: 0.7;
    }

    .grid:has(> .card) {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
    }

    .card-container:has(.card-image) {
      display: flex;
      flex-direction: column;
    }

    .card:has(.card-actions > * + *) {
      position: relative;
    }

    /* Spezielle Styling-Selektoren für Cards */
    .option-card:has(input[type="radio"]:checked) {
      background-color: var(--color-primary-50);
      border-color: var(--color-primary-500);
    }

    .payment-method:has(input[value="credit-card"]:checked) .card-details {
      display: block;
    }
  }
} 